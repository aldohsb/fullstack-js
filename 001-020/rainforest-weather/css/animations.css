/* ===== ANIMATIONS - RAINFOREST WEATHER WIDGET ===== */

/* ===== BACKGROUND ATMOSPHERIC ELEMENTS ===== */

/* Falling Leaves Animation */
.falling-leaves {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    pointer-events: none;
    z-index: var(--z-background);
}

.falling-leaves::before,
.falling-leaves::after {
    content: 'üçÉ';
    position: absolute;
    font-size: clamp(0.8rem, 2vw, 1.2rem);
    color: rgba(75, 181, 67, 0.6);
    animation: leafFall 15s linear infinite;
    top: -50px;
}

.falling-leaves::before {
    left: 10%;
    animation-delay: -5s;
    animation-duration: 18s;
}

.falling-leaves::after {
    left: 80%;
    animation-delay: -10s;
    animation-duration: 20s;
}

/* Rain Drops Animation */
.rain-drops {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    pointer-events: none;
    z-index: var(--z-background);
    opacity: 0;
    transition: opacity var(--transition-slow);
}

.rain-drops.active {
    opacity: 1;
}

.rain-drops::before,
.rain-drops::after {
    content: '';
    position: absolute;
    width: 2px;
    height: 100px;
    background: linear-gradient(
        to bottom,
        transparent,
        rgba(173, 216, 230, 0.6),
        transparent
    );
    animation: rainFall 0.8s linear infinite;
    top: -100px;
}

.rain-drops::before {
    left: 20%;
    animation-delay: -0.2s;
}

.rain-drops::after {
    left: 60%;
    animation-delay: -0.5s;
}

/* Forest Silhouette */
.forest-silhouette {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 200px;
    background: linear-gradient(
        to top,
        rgba(26, 74, 46, 0.3) 0%,
        transparent 100%
    );
    clip-path: polygon(
        0% 100%,
        0% 70%,
        10% 65%,
        20% 75%,
        25% 60%,
        35% 70%,
        45% 55%,
        55% 65%,
        65% 50%,
        75% 60%,
        85% 45%,
        95% 55%,
        100% 50%,
        100% 100%
    );
    pointer-events: none;
    z-index: var(--z-background);
}

/* ===== LOADING ANIMATIONS ===== */

.loading-screen .loading-leaf {
    animation: leafFloat 2s ease-in-out infinite alternate;
}

/* ===== WIDGET ENTRANCE ANIMATION ===== */
.weather-widget {
    animation: widgetEntrance 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
}

@keyframes widgetEntrance {
    0% {
        opacity: 0;
        transform: scale(0.8) translateY(50px);
        filter: blur(10px);
    }
    100% {
        opacity: 1;
        transform: scale(1) translateY(0);
        filter: blur(0);
    }
}

/* ===== WEATHER ICON ANIMATIONS ===== */

/* Base floating animation untuk weather icons */
.weather-icon {
    animation: float 3s ease-in-out infinite;
}

/* Specific animations untuk different weather conditions */
.weather-icon[data-condition="heavy_rain"],
.weather-icon[data-condition="light_rain"] {
    animation: rainBounce 2s ease-in-out infinite;
}

.weather-icon[data-condition="thunderstorm"] {
    animation: thunderShake 1.5s ease-in-out infinite;
}

.weather-icon[data-condition="sunny"] {
    animation: sunRotate 4s linear infinite;
}

.weather-icon[data-condition="foggy"] {
    animation: foggyFloat 4s ease-in-out infinite;
}

/* Animal companion animations */
.animal-companion {
    animation: animalMove 4s ease-in-out infinite;
}

.animal-companion[data-animal="ü¶ú"] {
    animation: birdFly 3s ease-in-out infinite;
}

.animal-companion[data-animal="üê∏"] {
    animation: frogHop 2s ease-in-out infinite;
}

.animal-companion[data-animal="ü¶ã"] {
    animation: butterflyFlutter 2.5s ease-in-out infinite;
}

.animal-companion[data-animal="üêí"] {
    animation: monkeySwing 3.5s ease-in-out infinite;
}

/* ===== STAT CARDS ANIMATIONS ===== */

.stat-item {
    animation: statCardEntrance 0.6s ease-out forwards;
    opacity: 0;
    transform: translateY(20px);
}

.stat-item:nth-child(1) { animation-delay: 0.1s; }
.stat-item:nth-child(2) { animation-delay: 0.2s; }
.stat-item:nth-child(3) { animation-delay: 0.3s; }
.stat-item:nth-child(4) { animation-delay: 0.4s; }

@keyframes statCardEntrance {
    0% {
        opacity: 0;
        transform: translateY(20px) scale(0.9);
    }
    100% {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

/* Stat icon bounce animation */
.stat-icon {
    transition: transform var(--transition-normal);
}

.stat-item:hover .stat-icon {
    animation: iconBounce 0.6s ease-in-out;
}

@keyframes iconBounce {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.2); }
}

/* ===== HOURLY FORECAST ANIMATIONS ===== */

.hourly-item {
    animation: hourlySlideIn 0.5s ease-out forwards;
    opacity: 0;
    transform: translateX(30px);
}

.hourly-item:nth-child(1) { animation-delay: 0.1s; }
.hourly-item:nth-child(2) { animation-delay: 0.15s; }
.hourly-item:nth-child(3) { animation-delay: 0.2s; }
.hourly-item:nth-child(4) { animation-delay: 0.25s; }
.hourly-item:nth-child(5) { animation-delay: 0.3s; }
.hourly-item:nth-child(6) { animation-delay: 0.35s; }

@keyframes hourlySlideIn {
    0% {
        opacity: 0;
        transform: translateX(30px);
    }
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

/* Hourly icon hover animation */
.hourly-icon {
    transition: transform var(--transition-normal);
}

.hourly-item:hover .hourly-icon {
    animation: iconPulse 0.8s ease-in-out;
}

@keyframes iconPulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.15); }
}

/* ===== TEMPERATURE UPDATE ANIMATION ===== */

.temperature {
    transition: all var(--transition-normal);
}

.temperature.updating {
    animation: temperatureUpdate 0.8s ease-in-out;
}

@keyframes temperatureUpdate {
    0% { transform: scale(1); }
    25% { transform: scale(1.05); color: var(--sun-yellow); }
    75% { transform: scale(0.95); }
    100% { transform: scale(1); }
}

/* ===== REFRESH BUTTON ANIMATION ===== */

.refresh-btn {
    position: relative;
    overflow: hidden;
}

.refresh-btn::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: all var(--transition-fast);
}

.refresh-btn:active::before {
    width: 100%;
    height: 100%;
}

.refresh-btn.loading .refresh-icon {
    animation: spin 1s linear infinite;
}

/* ===== FACT CARD ANIMATION ===== */

.rainforest-fact {
    animation: factSlideUp 0.6s ease-out forwards;
    opacity: 0;
    transform: translateY(20px);
    animation-delay: 0.5s;
}

@keyframes factSlideUp {
    0% {
        opacity: 0;
        transform: translateY(20px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Fact text typewriter effect */
.fact-text.typing {
    overflow: hidden;
    border-right: 2px solid rgba(255, 255, 255, 0.7);
    white-space: nowrap;
    animation: typing 3s steps(40, end), blink-caret 0.75s step-end infinite;
}

@keyframes typing {
    from { width: 0; }
    to { width: 100%; }
}

@keyframes blink-caret {
    from, to { border-color: transparent; }
    50% { border-color: rgba(255, 255, 255, 0.7); }
}

/* ===== KEYFRAME DEFINITIONS ===== */

@keyframes leafFall {
    0% {
        transform: translateY(-50px) rotate(0deg);
        opacity: 0;
    }
    10% {
        opacity: 1;
    }
    90% {
        opacity: 1;
    }
    100% {
        transform: translateY(100vh) rotate(360deg);
        opacity: 0;
    }
}

@keyframes rainFall {
    0% {
        transform: translateY(-100px);
        opacity: 0;
    }
    10% {
        opacity: 1;
    }
    90% {
        opacity: 1;
    }
    100% {
        transform: translateY(100vh);
        opacity: 0;
    }
}

@keyframes float {
    0%, 100% {
        transform: translateY(0px) rotate(0deg);
    }
    50% {
        transform: translateY(-10px) rotate(2deg);
    }
}

@keyframes rainBounce {
    0%, 100% {
        transform: translateY(0px);
    }
    25% {
        transform: translateY(-5px);
    }
    75% {
        transform: translateY(3px);
    }
}

@keyframes thunderShake {
    0%, 100% {
        transform: translateX(0);
    }
    10%, 30%, 50%, 70%, 90% {
        transform: translateX(-2px);
    }
    20%, 40%, 60%, 80% {
        transform: translateX(2px);
    }
}

@keyframes sunRotate {
    0% {
        transform: rotate(0deg);
        filter: brightness(1) drop-shadow(0 0 10px rgba(255, 193, 7, 0.5));
    }
    50% {
        filter: brightness(1.1) drop-shadow(0 0 15px rgba(255, 193, 7, 0.7));
    }
    100% {
        transform: rotate(360deg);
        filter: brightness(1) drop-shadow(0 0 10px rgba(255, 193, 7, 0.5));
    }
}

@keyframes foggyFloat {
    0%, 100% {
        transform: translateY(0px);
        opacity: 0.6;
    }
    50% {
        transform: translateY(-8px);
        opacity: 0.8;
    }
}

@keyframes animalMove {
    0%, 100% {
        transform: translateX(0px) rotate(0deg);
    }
    25% {
        transform: translateX(3px) rotate(-5deg);
    }
    75% {
        transform: translateX(-3px) rotate(5deg);
    }
}

@keyframes birdFly {
    0%, 100% {
        transform: translateY(0px) rotate(0deg);
    }
    33% {
        transform: translateY(-8px) rotate(-10deg);
    }
    66% {
        transform: translateY(-4px) rotate(5deg);
    }
}

@keyframes frogHop {
    0%, 100% {
        transform: translateY(0px) scale(1);
    }
    50% {
        transform: translateY(-12px) scale(0.9);
    }
}

@keyframes butterflyFlutter {
    0%, 100% {
        transform: translateY(0px) rotate(0deg) scale(1);
    }
    25% {
        transform: translateY(-6px) rotate(-15deg) scale(1.1);
    }
    75% {
        transform: translateY(-2px) rotate(10deg) scale(0.95);
    }
}

@keyframes monkeySwing {
    0%, 100% {
        transform: translateX(0px) rotate(0deg);
    }
    33% {
        transform: translateX(-8px) rotate(-20deg);
    }
    66% {
        transform: translateX(8px) rotate(15deg);
    }
}

@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

@keyframes leafFloat {
    0%, 100% {
        transform: translateY(0px) rotate(0deg);
    }
    50% {
        transform: translateY(-15px) rotate(10deg);
    }
}

/* ===== INTERACTION ANIMATIONS ===== */

/* Smooth hover transitions */
.stat-item,
.hourly-item,
.refresh-btn,
.rainforest-fact {
    transition: all var(--transition-normal);
}

/* Focus ring animation */
@keyframes focusRing {
    0% {
        box-shadow: 0 0 0 0 rgba(255, 193, 7, 0.7);
    }
    70% {
        box-shadow: 0 0 0 10px rgba(255, 193, 7, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(255, 193, 7, 0);
    }
}

button:focus-visible,
.refresh-btn:focus-visible {
    animation: focusRing 0.6s ease-out;
}

/* ===== WEATHER CONDITION TRANSITIONS ===== */

.weather-widget.updating {
    animation: weatherTransition 1.2s ease-in-out;
}

@keyframes weatherTransition {
    0% { 
        filter: blur(0px) brightness(1); 
        transform: scale(1);
    }
    50% { 
        filter: blur(2px) brightness(0.8); 
        transform: scale(0.98);
    }
    100% { 
        filter: blur(0px) brightness(1); 
        transform: scale(1);
    }
}

/* ===== RESPONSIVE ANIMATION ADJUSTMENTS ===== */

@media (max-width: 480px) {
    /* Reduce animation intensity on mobile */
    .weather-icon {
        animation-duration: 4s;
    }
    
    .animal-companion {
        animation-duration: 5s;
    }
    
    .falling-leaves::before,
    .falling-leaves::after {
        font-size: 0.8rem;
        animation-duration: 25s;
    }
}

/* ===== ACCESSIBILITY - REDUCED MOTION ===== */

@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
    
    .weather-icon,
    .animal-companion,
    .falling-leaves::before,
    .falling-leaves::after,
    .rain-drops::before,
    .rain-drops::after {
        animation: none !important;
    }
    
    /* Keep essential functional animations */
    .refresh-btn.loading .refresh-icon {
        animation: spin 1s linear infinite !important;
    }
}